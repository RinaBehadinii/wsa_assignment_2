version: '3.8'

services:
  user-service:
    build: ./services/user-service
    container_name: user-service
    ports:
      - "5000:5000"
    env_file:
      - .env
    networks:
      - library-network
    depends_on:
      - user-db

  user-db:
    image: mysql:5.7
    container_name: user-db
    environment:
      MYSQL_ROOT_PASSWORD: ${USER_DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${USER_DB_NAME}
      MYSQL_USER: ${USER_DB_USER}
      MYSQL_PASSWORD: ${USER_DB_PASS}
    volumes:
      - user-db-data:/var/lib/mysql
      - ./services/user-service/db-init:/docker-entrypoint-initdb.d
    networks:
      - library-network

  catalog-service:
    build: ./services/catalog-service
    container_name: catalog-service
    ports:
      - "5001:5001"
    env_file:
      - .env
    networks:
      - library-network
    depends_on:
      - catalog-db

  catalog-db:
    image: mysql:5.7
    container_name: catalog-db
    environment:
      MYSQL_ROOT_PASSWORD: ${CATALOG_DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${CATALOG_DB_NAME}
      MYSQL_USER: ${CATALOG_DB_USER}
      MYSQL_PASSWORD: ${CATALOG_DB_PASS}
    volumes:
      - catalog-db-data:/var/lib/mysql
      - ./services/catalog-service/db-init:/docker-entrypoint-initdb.d
    networks:
      - library-network

  order-service:
    build: ./services/order-service
    container_name: order-service
    ports:
      - "5002:80"
    env_file:
      - .env
    networks:
      - library-network
    depends_on:
      - order-db

  order-db:
    image: mysql:5.7
    container_name: order-db
    environment:
      MYSQL_ROOT_PASSWORD: ${ORDER_DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${ORDER_DB_NAME}
      MYSQL_USER: ${ORDER_DB_USER}
      MYSQL_PASSWORD: ${ORDER_DB_PASS}
    volumes:
      - order-db-data:/var/lib/mysql
      - ./services/order-service/db-init:/docker-entrypoint-initdb.d
    networks:
      - library-network

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "3000:80"
    networks:
      - library-network
    depends_on:
      - user-service
      - catalog-service
      - order-service

volumes:
  user-db-data:
  catalog-db-data:
  order-db-data:

networks:
  library-network:
